version: "3.9"
services:
  user:
    build:
      context: ./user
      args:
        - DEV=true
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./user:/user
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=user_db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOST=${DJANGO_ALLOWED_HOST}
      - DEBUG=1
    networks:
      - micro_service
    depends_on:
      user_db:
        condition: service_healthy
    links:
      - user_db

  user_db:
    image: postgres:14-alpine
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - micro_service

volumes:
  postgres_data_dev:

networks:
  micro_service:
    name: micro_service
